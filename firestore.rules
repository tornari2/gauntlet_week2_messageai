rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isChatParticipant(chatId) {
      return isAuthenticated() && 
             request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
    }
    
    // Users collection
    match /users/{userId} {
      // Anyone can read user documents (for displaying names, etc.)
      allow read: if isAuthenticated();
      
      // Users can only write their own document
      allow create: if isOwner(userId) && 
                      request.resource.data.uid == userId &&
                      request.resource.data.email == request.auth.token.email;
      
      allow update: if isOwner(userId);
      
      // Users cannot delete their document
      allow delete: if false;
      
      // UserChats subcollection (per-user chat metadata)
      match /userChats/{chatId} {
        allow read: if isOwner(userId);
        allow write: if isOwner(userId);
      }
    }
    
    // Chats collection
    match /chats/{chatId} {
      // Chat participants can read
      allow read: if isChatParticipant(chatId);
      
      // Chat participants can create (for new chats)
      allow create: if isAuthenticated() &&
                      request.auth.uid in request.resource.data.participants;
      
      // Chat participants can update (for lastMessage, etc.)
      allow update: if isChatParticipant(chatId) &&
                      // Ensure participants list doesn't change maliciously
                      request.resource.data.participants == resource.data.participants;
      
      // Nobody can delete chats
      allow delete: if false;
      
      // Messages subcollection
      match /messages/{messageId} {
        // Chat participants can read all messages
        allow read: if isChatParticipant(chatId);
        
        // Chat participants can create messages
        allow create: if isChatParticipant(chatId) &&
                        request.resource.data.senderId == request.auth.uid;
        
        // Users can update messages they sent (for editing, read receipts)
        allow update: if isChatParticipant(chatId);
        
        // Users can't delete messages (implement soft delete if needed)
        allow delete: if false;
      }
    }
  }
}


